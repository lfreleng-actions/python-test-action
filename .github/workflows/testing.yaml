---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: "Test GitHub Action üß™"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions: {}

env:
  python_version: "3.12"

jobs:
  ### Test the GitHub Action in this Repository ###
  tests:
    name: "Run Tests üß™"
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    timeout-minutes: 12
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Perform setup prior to running test(s)
      - name: "Checkout sample project repository"
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: "lfreleng-actions/test-python-project"
          path: "test-python-project"

      # Build sample Python project
      - name: "Build Python project"
        id: build
        # yamllint disable-line rule:line-length
        uses: lfreleng-actions/python-build-action@8febd88cda1d708cf5066c175f7ac165c6b3bcf3 # v0.1.14
        with:
          path_prefix: "test-python-project"
          tox_build: false

      # Perform Python project standard tests
      - name: "Run action: ${{ github.repository }} [PYTEST]"
        uses: ./
        with:
          python_version: ${{ env.python_version }}
          path_prefix: "test-python-project"
          tests_path: "tests"

      # Perform Python project failing tests
      - name: "Run action: ${{ github.repository }} [Test Failure]"
        uses: ./
        with:
          python_version: ${{ env.python_version }}
          path_prefix: "test-python-project"
          report_artefact: false
          # Test permit failure using action input
          tests_path: "tests_fail"
          permit_fail: true

      # Perform Python project failing tests
      - name: "Run action: ${{ github.repository }} [Test Failure]"
        id: tests-fail
        uses: ./
        continue-on-error: true
        with:
          python_version: ${{ env.python_version }}
          path_prefix: "test-python-project"
          report_artefact: false
          # Test permit failure using action input
          tests_path: "tests_fail"

      - name: "Validate previous step failure"
        if: steps.tests-fail.outcome == 'success'
        shell: bash
        run: |
          # Check previous step failure
          echo "Error: previous step should have failed ‚ùå"
          exit 1
